//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "comment")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub comment_id: i64,
    pub question_id: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub content: Option<String>,
    pub created: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::post_question::Entity",
        from = "Column::QuestionId",
        to = "super::post_question::Column::QuestionId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PostQuestion,
}

impl Related<super::post_question::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PostQuestion.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
