//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "market_item_options")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub market_item_id: i32,
    pub option_id: i32,
    pub option_param: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::item_option_template::Entity",
        from = "Column::OptionId",
        to = "super::item_option_template::Column::Id",
        on_update = "Restrict",
        on_delete = "Cascade"
    )]
    ItemOptionTemplate,
    #[sea_orm(
        belongs_to = "super::market_items::Entity",
        from = "Column::MarketItemId",
        to = "super::market_items::Column::Id",
        on_update = "Restrict",
        on_delete = "Cascade"
    )]
    MarketItems,
}

impl Related<super::item_option_template::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ItemOptionTemplate.def()
    }
}

impl Related<super::market_items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MarketItems.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
