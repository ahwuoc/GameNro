//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "box_item_drop_options")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub drop_id: i32,
    pub option_id: i32,
    pub option_param: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::box_item_drops::Entity",
        from = "Column::DropId",
        to = "super::box_item_drops::Column::Id",
        on_update = "Restrict",
        on_delete = "Cascade"
    )]
    BoxItemDrops,
    #[sea_orm(
        belongs_to = "super::item_option_template::Entity",
        from = "Column::OptionId",
        to = "super::item_option_template::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    ItemOptionTemplate,
}

impl Related<super::box_item_drops::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BoxItemDrops.def()
    }
}

impl Related<super::item_option_template::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ItemOptionTemplate.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
