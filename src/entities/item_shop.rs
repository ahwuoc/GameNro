//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "item_shop")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub tab_id: i32,
    pub temp_id: i32,
    pub is_new: i8,
    pub is_sell: i8,
    pub type_sell: Option<i32>,
    pub cost: Option<i32>,
    pub icon_spec: Option<i32>,
    pub create_time: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::item_shop_option::Entity")]
    ItemShopOption,
}

impl Related<super::item_shop_option::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ItemShopOption.def()
    }
}

impl Related<super::item_option_template::Entity> for Entity {
    fn to() -> RelationDef {
        super::item_shop_option::Relation::ItemOptionTemplate.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::item_shop_option::Relation::ItemShop.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
