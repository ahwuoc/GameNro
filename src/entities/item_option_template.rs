//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "item_option_template")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    #[sea_orm(column_name = "NAME")]
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::box_item_drop_options::Entity")]
    BoxItemDropOptions,
    #[sea_orm(has_many = "super::giftcode_item_options::Entity")]
    GiftcodeItemOptions,
    #[sea_orm(has_many = "super::item_shop_option::Entity")]
    ItemShopOption,
    #[sea_orm(has_many = "super::market_item_options::Entity")]
    MarketItemOptions,
}

impl Related<super::box_item_drop_options::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BoxItemDropOptions.def()
    }
}

impl Related<super::giftcode_item_options::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GiftcodeItemOptions.def()
    }
}

impl Related<super::item_shop_option::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ItemShopOption.def()
    }
}

impl Related<super::market_item_options::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MarketItemOptions.def()
    }
}

impl Related<super::item_shop::Entity> for Entity {
    fn to() -> RelationDef {
        super::item_shop_option::Relation::ItemShop.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::item_shop_option::Relation::ItemOptionTemplate
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
